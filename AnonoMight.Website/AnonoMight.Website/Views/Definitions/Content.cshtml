@model AnonoMight.Website.Models.DefinitionModel

@using PagedList.Mvc
@{
    ViewBag.Title = Model.SiteInfo.Title;
}

@Html.Hidden("SiteName", Model.SiteInfo.Name)

<h2>@Model.SiteInfo.Title</h2>

<div class="row site-header">
    <div class="col-md-2"><img id="ProfileImage" src="@Url.Action("GetSiteImage", "Site", new  { SiteName = Model.SiteInfo.Name})" /></div>
    <div class="col-md-10">@Model.SiteInfo.Description</div>
</div>
@if (Model.ContentList.PageNumber == 1)
{
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <input type="text" id="title" class="form-control" placeholder="Title" />
            </div>
        </div>
        <div class="col-md-8">
            <div class="form-group">
                <input type="text" id="definition" class="form-control" placeholder="Make your definition?" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <input type="button" id="sendmessage" class="col-md-12 btn btn-default" value="Send" />
            </div>
        </div>
    </div>
}
<div class="table" id="Posts">
    @foreach (var item in Model.ContentList)
    {

        <div class=" textRow" data-id="@item.Id">
            <div class="col-md-12">
                <div><strong>@item.Name: </strong>@item.Text</div>
                <div>
                    <div class="date">@item.TimeStamp.ToString("dd MMMM yyyy HH:mm") </div>
                    <div class="report"><a data-toggle="modal" data-target="#reportModal">Report</a></div>
                    <div class="clear"></div>
                </div>
            </div>
        </div>

    }


</div>
    Page @(Model.ContentList.PageCount < Model.ContentList.PageNumber ? 0 : Model.ContentList.PageNumber) of @Model.ContentList.PageCount
    @Html.PagedListPager(Model.ContentList, page => string.Format("/{1}?page={0}", page, Model.SiteInfo.Name))

    @section scripts {

        @if (Model.ContentList.PageNumber == 1)
        {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
            <script src="~/Scripts/jquery.signalR-2.0.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
            <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
            <script>
                $(function () {
                    // Reference the auto-generated proxy for the hub.
                    var chat = $.connection.notificationHub;
                    // Create a function that the hub can call back to display messages.
                    chat.client.postDefinitionReceived = function (event) {
                        // Add the message to the page.
                        if ($("#Posts .row").length >= 10)
                            $("#Posts .row").last().remove();

                        var row =

                         '<div class=" textRow" data-id="' + event.Id + '">' +
                             '<div class="col-md-12">' +

                                     '<div><strong>' + event.Title + ': </strong>' + event.Text + '</div>' +
                                     '<div>' +
                                         '<div class="date">Now</div>' +
                                         '<div class="report" ><a data-toggle="modal" data-target="#reportModal">Report</a></div>' +
                                         '<div class="clear"></div>'
                        '</div>' +

               '</div>' +
           '</div>';
                        $('#Posts').prepend(row);
                    };
                    // Get the user name and store it to prepend to messages.
                    // Set initial focus to message input box.
                    $('#title').focus();
                    // Start the connection.

                    var siteName = '@(Model.SiteInfo.Name)';
                    $.connection.hub.start().done(function () {
                        chat.server.addGroup({ siteName: siteName });

                        $('#sendmessage').click(function () {
                            // Call the Send method on the hub.
                            chat.server.postDefinition({ siteName: siteName, title: $('#title').val(), text: $('#definition').val() });
                            // Clear text box and reset focus for next comment.
                            $('#definition').val('');
                            $('#title').val('').focus();
                        });
                    });
                });

            </script>
        }
    }

